# action.yml
name: 'Neo4j Deploy Plugin'
description: 'Deploy a Neo4j plugin to a remote Neo4j server'
inputs:
  local-plugin-file:  
    description: 'Plugin JAR file to be deployed to Neo4j'
    required: true

  disable-previous-version:
    description: 'Disable previous version of plugin (append .old to JAR file)'
    required: true
    default: 'true'

  restart-neo4j-service:
    description: 'Restart Neo4j service after deploy'
    required: false
    default: 'false'

  remote-host:  
    description: 'Host address of remote Neo4j server'
    required: true

  remote-port:  
    description: 'Port of remote Neo4j server'
    required: false
    default: '22'

  remote-user:  
    description: 'Username on remote Neo4j server'
    required: true

  remote-password:  
    description: 'Password on remote Neo4j server'
    required: false

  remote-ssh-key-content:  
    description: 'SSH private key content'
    required: false

  remote-ssh-key-file:  
    description: 'SSH private key file'
    required: false

  remote-ssh-key-passphrase:
    description: 'Passphrase to decrypt SSH private key'
    required: false

  remote-plugin-dir:
    description: 'Remote plugin directory on Neo4j'
    required: false
    default: '/var/lib/neo4j/plugins'

runs:
  using: "composite"
  steps:
    - name: Check if remote SSH key or password was provided
      if: ${{ github.event.inputs.remote-password ==  '' && github.event.inputs.remote-ssh-key-content == '' && github.event.inputs.remote-ssh-key-file == '' }}
      shell: bash
      run: | 
        echo "::error ::No remote SSH key or password was provided" && exit 1

    # - name: Check if plugin artifact is a jar file
    #   shell: bash
    #   run: |
    #     shopt -s nocasematch
    #     if [[ ! ${{ github.event.inputs.local-plugin-file }} =~ \.jar$ ]]; then
    #       echo "::error ::Plugin is not a jar file" && exit 1
    #     fi 

    - name: Upload plugin to remote Neo4j server
      if: ${{ success() }}
      uses: appleboy/scp-action@master
      with:
        host: ${{ inputs.remote-host }}
        port: ${{ inputs.remote-port }}
        username: ${{ inputs.remote-user }}
        password: ${{ inputs.remote-password }}
        key: ${{ inputs.remote-ssh-key-content }}
        key_path: ${{ inputs.remote-ssh-key-file }}
        passphrase: ${{ inputs.remote-ssh-key-passphrase }}
        source: ${{ inputs.local-plugin-file }} # source on local machine
        target: "." # target directory on remote server

    - name: Prepare plugin file path
      if: ${{ success() }}
      shell: bash
      run: |
        PLUGIN_FILE=$(basename ${{ inputs.local-plugin-file }})
        echo "PLUGIN_FILE=$(basename ${{ inputs.local-plugin-file }})" >> $GITHUB_ENV
        echo "PLUGIN_DIR=${{ inputs.remote-plugin-dir }}" >> $GITHUB_ENV
        echo "PLUGIN_PATH=${{ inputs.remote-plugin-dir }}/$(basename ${{ inputs.local-plugin-file }})" >> $GITHUB_ENV
        echo "PLUGIN_PREFIX=$(sed -rn "s/^(.*)-[0-9]+\.[0-9]+\.[0-9]+\.jar$/\1/p" <<< $PLUGIN_FILE)" >> $GITHUB_ENV

    - name: Move plugin to target directory and update permissions
      if: ${{ github.event.inputs.disable-previous-version == 'true' && success() }}
      uses: appleboy/ssh-action@master
      env:
        PLUGIN_DIR: ${{ env.PLUGIN_DIR }}
        PLUGIN_PREFIX: ${{ env.PLUGIN_PREFIX }}
      with:
        host: ${{ inputs.remote-host }}
        username: ${{ inputs.remote-user }}
        password: ${{ inputs.remote-password }}
        port: ${{ inputs.remote-port }}
        key: ${{ inputs.remote-ssh-key-content }}
        key_path: ${{ inputs.remote-ssh-key-file }}
        passphrase: ${{ inputs.remote-ssh-key-passphrase }}
        envs: PLUGIN_DIR,PLUGIN_PREFIX
        script_stop: true
        script: |
          cd $PLUGIN_DIR
          echo "List previous version of plugin with prefix $PLUGIN_PREFIX"
          find . -iname "$PLUGIN_PREFIX*"
          echo "Append suffix .old to all previous versions"
          sudo find . -iname "$PLUGIN_PREFIX*" -exec rename .jar .jar.old '{}' \;

    - name: Move plugin to target directory and update permissions
      if: ${{ success() }}
      uses: appleboy/ssh-action@master
      env:
        PLUGIN_FILE: ${{ env.PLUGIN_FILE }}
        PLUGIN_DIR: ${{ env.PLUGIN_DIR }}
        PLUGIN_PATH: ${{ env.PLUGIN_PATH }}
        PLUGIN_PREFIX: ${{ env.PLUGIN_PREFIX }}
      with:
        host: ${{ inputs.remote-host }}
        username: ${{ inputs.remote-user }}
        password: ${{ inputs.remote-password }}
        port: ${{ inputs.remote-port }}
        key: ${{ inputs.remote-ssh-key-content }}
        key_path: ${{ inputs.remote-ssh-key-file }}
        passphrase: ${{ inputs.remote-ssh-key-passphrase }}
        envs: PLUGIN_FILE,PLUGIN_PATH
        script_stop: true
        script: |
          echo "Moving $PLUGIN_FILE to $PLUGIN_PATH"
          sudo mv $PLUGIN_FILE $PLUGIN_PATH
          echo "Changing owner and group to neo4j:neo4j"
          sudo chown -R neo4j:neo4j $PLUGIN_PATH
          echo "Changing mode to executable"
          sudo chmod +x $PLUGIN_PATH